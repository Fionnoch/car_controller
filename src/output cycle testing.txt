#include <Arduino.h>

const int up_button_pin = GPIO_NUM_39;     // the number of the pushbutton pin
const int down_button_pin = GPIO_NUM_34;     // the number of the pushbutton pin
const int turbo_state_pin = GPIO_NUM_35;
const int ecu_state_pin = GPIO_NUM_32;

const int gear_control_1 =  GPIO_NUM_17;      // working
const int gear_control_2 =  GPIO_NUM_16;      // working
const int turbo_control =  GPIO_NUM_18;      //working
const int ecu_control = GPIO_NUM_19;        //working 

const int clutch_control = GPIO_NUM_26;      //working


// variables
int buttonState = 0;         // variable for reading the pushbutton status
unsigned int last_interupt;
const int gear_trigger_debounce = 1000;
int set_gear = 1;
int current_gear = 1;
bool allow_gear_change = true;


void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);

  // initialize the pins as an output:
  pinMode(gear_control_1, OUTPUT);
  pinMode(gear_control_2, OUTPUT);
  pinMode(turbo_control,  OUTPUT);
  pinMode(ecu_control, OUTPUT);

  //ledcSetup(PWM_CHANNEL, PWM_FREQ, PWM_RESOLUTION);
  //ledcSetup(PWM_CHANNEL, PWM_FREQ, PWM_RESOLUTION);
  //ledcAttachPin(clutch_control, PWM_CHANNEL);
  //pinMode(clutch_control, OUTPUT);

  // initialize the pushbutton pin as an input:
  pinMode(up_button_pin, INPUT); //pinMode(up_button_pin, INPUT_PULLUP); //  pinMode(up_button_pin, INPUT);
  pinMode(down_button_pin, INPUT);
  pinMode(turbo_state_pin, INPUT);
  pinMode(ecu_state_pin, INPUT);

//  attachInterrupt(digitalPinToInterrupt(up_button_pin), gear_up, FALLING);
//  attachInterrupt(digitalPinToInterrupt(down_button_pin), gear_down, FALLING);

  //analogWrite(clutch_control, 255); //enguage the clutch

  digitalWrite(gear_control_1, HIGH); //set to 1st gear
  digitalWrite(gear_control_2, LOW);

  digitalWrite(ecu_control, LOW);

  Serial.println(set_gear);
}

void loop() {
  // put your main code here, to run repeatedly:

  for (int fadeValue = 0; fadeValue <= 255; fadeValue += 15) {
    // sets the value (range from 0 to 255):
    analogWrite(clutch_control, fadeValue);
    //ledcWrite(PWM_CHANNEL, fadeValue);
    // wait for 30 milliseconds to see the dimming effect
    Serial.println(fadeValue);
    delay(1000);
  }

Serial.println("decreasing voltage");
  // fade out from max to min in increments of 5 points:
  for (int fadeValue = 255; fadeValue >= 1; fadeValue -= 5) {
    // sets the value (range from 0 to 255):
    analogWrite(clutch_control, fadeValue);
    //ledcWrite(PWM_CHANNEL, fadeValue);
    // wait for 30 milliseconds to see the dimming effect
    Serial.println(fadeValue);
    delay(500);
  }

/*
Serial.println("increasing voltage");
analogWrite(clutch_control, 0);
delay(2000);
analogWrite(clutch_control, 50);
delay(2000);
analogWrite(clutch_control, 100);
delay(2000);
analogWrite(clutch_control, 150);
delay(2000);
analogWrite(clutch_control, 200);
delay(2000);
analogWrite(clutch_control, 255);
delay(2000);

Serial.println("decreasing voltage");
analogWrite(clutch_control, 255);
delay(2000);
analogWrite(clutch_control, 200);
delay(2000);
analogWrite(clutch_control, 150);
delay(2000);
analogWrite(clutch_control, 100);
delay(2000);
analogWrite(clutch_control, 50);
delay(2000);
analogWrite(clutch_control, 0);
delay(2000);


  for (int fadeValue = 0; fadeValue <= 255; fadeValue += 15) {
    // sets the value (range from 0 to 255):
    analogWrite(clutch_control, fadeValue);
    //ledcWrite(PWM_CHANNEL, fadeValue);
    // wait for 30 milliseconds to see the dimming effect
    Serial.println(fadeValue);
    delay(1000);
  }

Serial.println("decreasing voltage");
  // fade out from max to min in increments of 5 points:
  for (int fadeValue = 255; fadeValue >= 1; fadeValue -= 5) {
    // sets the value (range from 0 to 255):
    analogWrite(clutch_control, fadeValue);
    //ledcWrite(PWM_CHANNEL, fadeValue);
    // wait for 30 milliseconds to see the dimming effect
    Serial.println(fadeValue);
    delay(500);
  }


  //set all pins low to start
  digitalWrite(ecu_control, LOW); 
  digitalWrite(turbo_control, LOW); 
  digitalWrite(gear_control_1, LOW); 
  digitalWrite(gear_control_2, LOW); 
    Serial.println(" off");

  delay(2000); 

    digitalWrite(ecu_control, HIGH); 
  digitalWrite(turbo_control, HIGH); 
  digitalWrite(gear_control_1, HIGH); 
  digitalWrite(gear_control_2, HIGH); 
    Serial.println(" on");

delay(2000);







  digitalWrite(ecu_control, HIGH);
  Serial.println("ecu pin set high all else low");  
  delay(5000);
  digitalWrite(ecu_control, LOW);

  digitalWrite(turbo_control, HIGH);
  Serial.println("turbo pin set high all else low");  
  delay(5000);
  digitalWrite(turbo_control, LOW);

  digitalWrite(gear_control_1, HIGH);
  Serial.println("gear_control_1 pin set high all else low");  
  delay(5000);
  digitalWrite(gear_control_1, LOW);

  digitalWrite(gear_control_2, HIGH);
  Serial.println("gear_control_2 pin set high all else low");  
  delay(5000);
  digitalWrite(gear_control_2, LOW);

*/
}
